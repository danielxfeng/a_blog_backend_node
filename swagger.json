{
  "openapi": "3.0.0",
  "info": {
    "title": "Blog API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/likes/{postId}": {
      "post": {
        "summary": "Like a post, registered user only",
        "tags": [
          "Likes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the post"
          }
        ],
        "responses": {
          "204": {
            "description": "Post liked successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "summary": "Unlike a post, registered user only",
        "tags": [
          "Likes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the post"
          }
        ],
        "responses": {
          "204": {
            "description": "Post un-liked successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get total number of likes, and if current user liked the post (registered user only)",
        "tags": [
          "Likes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the post"
          }
        ],
        "responses": {
          "200": {
            "description": "Like status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 2
                    },
                    "liked": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get current user profile",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "user_123"
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe"
                    },
                    "avatarUrl": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com/avatar.jpg"
                    },
                    "oauthProviders": {
                      "type": "array",
                      "description": "List of connected OAuth providers",
                      "items": {
                        "type": "string",
                        "example": "google"
                      },
                      "example": [
                        "google",
                        "github"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-01T12:00:00Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-04-14T12:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "summary": "Update current user info",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "John D.",
                    "minLength": 1,
                    "maxLength": 50,
                    "pattern": "^[a-zA-Z0-9._-]+$",
                    "description": "Must contain only letters, numbers, dots, hyphens, or underscores."
                  },
                  "avatarUrl": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/avatar.jpg",
                    "minLength": 15,
                    "maxLength": 200
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated user info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "user_123"
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe"
                    },
                    "avatarUrl": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com/avatar.jpg"
                    },
                    "oauthProviders": {
                      "type": "array",
                      "description": "List of connected OAuth providers",
                      "items": {
                        "type": "string",
                        "example": "google"
                      },
                      "example": [
                        "google",
                        "github"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-01T12:00:00Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-04-14T12:00:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/all": {
      "get": {
        "summary": "List all users (admin only)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "user_123"
                      },
                      "username": {
                        "type": "string",
                        "example": "johndoe"
                      },
                      "avatarUrl": {
                        "type": "string",
                        "format": "uri",
                        "example": "https://example.com/avatar.jpg"
                      },
                      "oauthProviders": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "google"
                        ]
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-01T12:00:00Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-14T12:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Admins only"
          }
        }
      }
    },
    "/api/users/{userId}": {
      "delete": {
        "summary": "Delete a user (admin only)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Admins only"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password",
                  "confirmPassword",
                  "consent"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "newuser",
                    "minLength": 1,
                    "maxLength": 50,
                    "pattern": "^[a-zA-Z0-9._-]+$",
                    "description": "Must contain only letters, numbers, dots, hyphens, or underscores."
                  },
                  "consent": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the user consents to the terms and conditions (must be true)"
                  },
                  "password": {
                    "type": "string",
                    "example": "$Passw0rd1111",
                    "minLength": 8,
                    "maxLength": 50,
                    "description": "Must contain at least 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character."
                  },
                  "avatarUrl": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/avatar.jpg",
                    "minLength": 15,
                    "maxLength": 200
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "headers": {
              "Location": {
                "description": "URL of the created user profile",
                "schema": {
                  "type": "string",
                  "example": "/users/user1"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "aaa.bbb"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "bbb.ccc"
                    },
                    "id": {
                      "type": "string",
                      "example": "user1"
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe"
                    },
                    "avatarUrl": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com/avatar.jpg"
                    },
                    "role": {
                      "type": "string",
                      "example": "user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login with username and password",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "newuser",
                    "minLength": 1,
                    "maxLength": 50,
                    "pattern": "^[a-zA-Z0-9._-]+$",
                    "description": "Must contain only letters, numbers, dots, hyphens, or underscores."
                  },
                  "password": {
                    "type": "string",
                    "example": "$Passw0rd1111",
                    "minLength": 8,
                    "maxLength": 50,
                    "description": "Must match the password field."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful, returns tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "aaa.bbb"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "bbb.ccc"
                    },
                    "id": {
                      "type": "string",
                      "example": "user1"
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe"
                    },
                    "avatarUrl": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com/avatar.jpg"
                    },
                    "role": {
                      "type": "string",
                      "example": "user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/auth/change-password": {
      "post": {
        "summary": "Change current user's password",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "currentPassword",
                  "newPassword",
                  "confirmPassword"
                ],
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "example": "$Passw0rd1111",
                    "minLength": 8,
                    "maxLength": 50,
                    "description": "Must match the password field."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "aaa.bbb"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "bbb.ccc"
                    },
                    "id": {
                      "type": "string",
                      "example": "user1"
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe"
                    },
                    "avatarUrl": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com/avatar.jpg"
                    },
                    "role": {
                      "type": "string",
                      "example": "user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized or current password incorrect"
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "summary": "Refresh access token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "aaaaaa.bbbbbb.cccccc"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "aaa.bbb"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "bbb.ccc"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid or expired refresh token"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Logout current user",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logout successful"
          }
        }
      }
    },
    "/api/auth/oauth/{provider}": {
      "get": {
        "summary": "Start OAuth flow with a provider",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "provider",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "google",
                "github"
              ]
            },
            "description": "OAuth provider name"
          },
          {
            "in": "query",
            "name": "consent",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "description": "Whether the user consents to the terms and conditions (must be true)"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirects to the provider's OAuth consent screen"
          },
          "400": {
            "description": "Invalid provider or missing consent"
          }
        }
      }
    },
    "/api/auth/oauth/{provider}/callback": {
      "get": {
        "summary": "OAuth callback",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "provider",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "google",
                "github"
              ]
            },
            "description": "OAuth provider name"
          }
        ],
        "responses": {
          "200": {
            "description": "OAuth login success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "aaa.bbb"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "bbb.ccc"
                    },
                    "id": {
                      "type": "string",
                      "example": "user1"
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe"
                    },
                    "avatarUrl": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com/avatar.jpg"
                    },
                    "role": {
                      "type": "string",
                      "example": "user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "OAuth failed"
          }
        }
      }
    },
    "/api/auth/oauth/unlink/{provider}": {
      "delete": {
        "summary": "Unlink an OAuth provider",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "provider",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "google",
                "github"
              ]
            },
            "description": "OAuth provider to unlink"
          }
        ],
        "responses": {
          "200": {
            "description": "Unlinked successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/comments": {
      "get": {
        "summary": "Get comments for a specific post",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the post"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "The offset for pagination (default is 0)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Number of comments per page (default is 10)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of comments for the post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "comment001"
                      },
                      "postId": {
                        "type": "string",
                        "example": "post001"
                      },
                      "authorId": {
                        "type": "string",
                        "example": "user1"
                      },
                      "authorName": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "authorAvatar": {
                        "type": "string",
                        "example": "https://example.com/avatar.jpg"
                      },
                      "content": {
                        "type": "string",
                        "example": "Great"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/api/posts/{postId}/comments": {
      "post": {
        "summary": "Create a comment on a post, registered users only",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the post"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "content"
                ],
                "properties": {
                  "content": {
                    "type": "string",
                    "example": "This is a comment",
                    "minLength": 1,
                    "maxLength": 500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created",
            "headers": {
              "Location": {
                "description": "URL of the newly created comment",
                "schema": {
                  "type": "string",
                  "example": "/comments/aaabbb"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/comments/{commentId}": {
      "delete": {
        "summary": "Delete a comment, author or admin only",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the comment"
          }
        ],
        "responses": {
          "204": {
            "description": "Comment deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Only the author or admin can delete the comment"
          },
          "404": {
            "description": "Comment not found"
          }
        }
      },
      "put": {
        "summary": "Update a comment, author only",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the comment"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "content"
                ],
                "properties": {
                  "content": {
                    "type": "string",
                    "example": "Updated comment content",
                    "minLength": 1,
                    "maxLength": 500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "aaabbb"
                    },
                    "postId": {
                      "type": "string",
                      "example": "bbbccc"
                    },
                    "content": {
                      "type": "string",
                      "example": "Updated comment content"
                    },
                    "authorId": {
                      "type": "string",
                      "example": "user1"
                    },
                    "authorName": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "authorAvatar": {
                      "type": "string",
                      "example": "https://example.com/avatar.jpg"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-01T00:00:00Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-04-14T12:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Only the author can update the comment"
          },
          "404": {
            "description": "Comment not found"
          }
        }
      }
    },
    "/api/posts": {
      "get": {
        "summary": "Get a list of blog posts",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            },
            "description": "The offset for pagination (default is 0)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Number of posts per page (default is 10)"
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "description": "Filter by tags"
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (ISO)"
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (ISO)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "post001"
                      },
                      "title": {
                        "type": "string",
                        "example": "Title"
                      },
                      "excerpt": {
                        "type": "string",
                        "description": "preview of the post content",
                        "example": "Hi there..."
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "a",
                          "b"
                        ]
                      },
                      "authorId": {
                        "type": "string",
                        "example": "user1"
                      },
                      "authorName": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "authorAvatar": {
                        "type": "string",
                        "example": "https://example.com/avatar.jpg"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-01T00:00:00Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-02T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new blog post, admin only",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "markdown"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Title",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "markdown": {
                    "type": "string",
                    "example": "Content",
                    "minLength": 1,
                    "maxLength": 5000
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 20,
                      "pattern": "^[a-zA-Z0-9._-]+$",
                      "description": "Must contain only letters, numbers, dots, hyphens, or underscores."
                    },
                    "example": [
                      "dev",
                      "life"
                    ]
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-01-01T00:00:00Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created",
            "headers": {
              "Location": {
                "description": "URL of the newly created post",
                "schema": {
                  "type": "string",
                  "example": "/posts/abc123"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden, only admin can create a post"
          }
        }
      }
    },
    "/api/posts/{postId}": {
      "get": {
        "summary": "Get a single post including its comments",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the post"
          }
        ],
        "responses": {
          "200": {
            "description": "The post content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "post1"
                    },
                    "title": {
                      "type": "string",
                      "example": "Title"
                    },
                    "content": {
                      "type": "string",
                      "example": "Content"
                    },
                    "authorId": {
                      "type": "string",
                      "example": "user1"
                    },
                    "authorName": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "authorAvatar": {
                      "type": "string",
                      "example": "https://example.com/avatar.jpg"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "tag1",
                        "tag2"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-04-01T10:00:00Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-04-01T10:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "put": {
        "summary": "Update a blog post, author only",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the post"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "markdown": {
                    "type": "string",
                    "example": "Content",
                    "minLength": 1,
                    "maxLength": 5000
                  },
                  "title": {
                    "type": "string",
                    "example": "Title",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 20,
                      "pattern": "^[a-zA-Z0-9._-]+$",
                      "description": "Must contain only letters, numbers, dots, hyphens, or underscores."
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-01-01T00:00:00Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "post1"
                    },
                    "title": {
                      "type": "string",
                      "example": "Title"
                    },
                    "content": {
                      "type": "string",
                      "example": "Content"
                    },
                    "authorId": {
                      "type": "string",
                      "example": "user1"
                    },
                    "authorName": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "authorAvatar": {
                      "type": "string",
                      "example": "https://example.com/avatar.jpg"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "tag1",
                        "tag2"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-04-01T10:00:00Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-04-01T10:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden, only author can update the post"
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a blog post, admin only",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the post"
          }
        ],
        "responses": {
          "204": {
            "description": "Post deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden, only admin can delete a post"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}